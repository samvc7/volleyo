name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: volleyo_test
        options: >-
          --health-cmd="pg_isready -U postgres -d volleyo_test"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
    env:
      NEXTAUTH_URL: http://127.0.0.1:3000
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
      ADMIN_PW: ${{ secrets.ADMIN_PW }}
      GUEST_USERNAME: ${{ secrets.GUEST_USERNAME }}
      GUEST_PW: ${{ secrets.GUEST_PW }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      CI: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm install -g pnpm && pnpm install
      - name: Generate Prisma Client
        run: pnpm prisma generate
      - name: Prepare schema (no migrations)
        run: pnpm prisma db push --force-reset
      - name: Seed data
        run: pnpm ts-node --compiler-options '{"module":"CommonJS"}' prisma/seed.ts
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
      - name: Run Playwright tests
        run: pnpm exec playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
